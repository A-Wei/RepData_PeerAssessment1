style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
png('meetings.png')
formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
calculate.run.rate(BS.Revenue.table$monthly_target, "month") %>% run.rate.colors()
?png
png(filename = 'meetings.png',width = 480, height = 300,units = "px")
png(filename = "meetings.png",width = 480, height = 300,units = "px")
formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
getwd()
?png
png(filename = "meetings.png",width = 480, height = 300,units = "px")
dev.off()
png(filename = "meetings.png",width = 480, height = 300)
dev.off()
dev.print(png, 'meetings.png')
dev.print(png, 'meetings.png',width = 480, height = 300)
formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
dev.print(png, 'meetings.png',width = 480, height = 300)
formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
dev.print(png, 'meetings.png',width = 480, height = 300)
png(filename = "meetings.png",width = 480, height = 300)
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
png("graph1.png",width = 480, height = 300)
plot.ts(Meeting)
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
png("graph1.png",width = 480, height = 300)
plot(Meeting)
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
png("graph1.png",width = 480, height = 300)
plot(Meeting)
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
png("Meetings.png",width = 480, height = 300)
plot(Meeting)
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
library(ggplot2)
qplot(Meeting)
dev.print(png,"Meetings.png",width = 480, height = 300)
dev.off()
meetings
Meeting
Meeting
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
dev.print(png,"Meetings.png",width = 970, height = 380)
dev.off()
qplot(Meeting)
dev.print(png,"Meetings.png",width = 480, height = 300)
dev.off()
plot(Meeting)
dev.print(png,"Meetings.png",width = 480, height = 300)
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
dev.print(pdf,"Meetings.pdf")
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
dev.print(pdf(),"Meetings.pdf")
dev.off()
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
dev.print(pdf("Meetings.pdf"))
dev.off()
Meeting
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
pdf("data_output.pdf", height=11, width=8.5)
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
pdf("data_output.pdf", height=11, width=8.5)
print.data.frame(Meeting)
Meeting <- formattable(BS.Meetings.table, list(
monthly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "month") %>% run.rate.colors())),
weekly_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "week") %>% run.rate.colors())),
daily_target = formatter("span",
style = function(x)
style("border-radius" = "4px",
"padding-right" = "4px",
display = "block",
background = calculate.run.rate(x, "day") %>% run.rate.colors()))))
png(filename = "output1.png", width=480,height=480)
grid.table(output1)
dev.off()
installed.packages("gridtable")
installed.packages("gridExtra")
installed.packages("gridExtra")
library(gridExtra)
installed.packages(gridExtra)
installed.packages('gridExtra')
install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
png("Meeting.png")
p<-tableGrob(Meeting)
grid.arrange(p)
dev.off()
library(gridExtra)
Meeting
png("test.png", height=1000, width=200)
p<-tableGrob(Meeting)
grid.arrange(p)
dev.off()
png("test.png", height=200, width=1000)
p<-tableGrob(Meeting)
grid.arrange(p)
dev.off()
library(knitr)
library(xtable)
?if
?if
?if
?if
?file.exists
if(!file.exists('activity.csv)){
unzip('activity.zip')
}
activityData <- read.csv('activity.csv')
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activityData <- read.csv('activity.csv')
getwd()
setwd("~/Data Scientist/5. Reproducable Analysis/RepData_PeerAssessment1")
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activityData <- read.csv('activity.csv')
head(activityData)
summary(activityData)
glance(activityData)
stepsPerDay <- tapply(activityData$steps,activityData$date,sum, na.rm = TRUE)
averageStepsPerInterval <- aggregate(x=list(meanSteps=activityData$steps), y=list(interval=activityData$interval),FUN = mean, na.rm = TRUE)
averageStepsPerInterval <- aggregate(x=list(meanSteps=activityData$steps), by=list(interval=activityData$interval),FUN = mean, na.rm = TRUE)
stepsPerDayMean <- mean(stepsPerDay)
stepsPerDayMedian <- median(stepsPerDay)
qplot(stepsPerDay,xlab='Total steps per day', ylab='Frequency using binwith 500', binwidth=500)
library(ggplot2)
qplot(stepsPerDay,xlab='Total steps per day', ylab='Frequency using binwith 500', binwidth=500)
averageStepsPerInterval <- aggregate(x=list(meanSteps=activityData$steps), by=list(interval=activityData$interval),FUN = mean, na.rm = TRUE)
ggplot(data=averageStepsPerTimeBlock, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
ggplot(data=averageStepsPerInterval, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
?which.max
mostSteps <- which.max(averageStepsPerInterval$meanSteps)
timeMostSteps <- gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", averageStepsPerInterval[mostSteps,'interval'])
verageStepsPerTimeBlock$meanSteps
?gsub
([0-9]{1,2})([0-9]{2})
[0-9]{1,2}
?which
is.na(activityData$steps)
which(is.na(activityData$steps))
length(which(is.na(activityData$steps)))
act_new <- activityData
act_new[which(is.na(act_new$steps)),1]<-
stepsPerDayMean[as.character(act_new[which(is.na(act_new$steps)),3])]
activity_new <- activityData
activity_new[which(is.na(activity_new$steps)),1]<-
stepsPerDayMean[as.character(activity_new[which(is.na(activity_new$steps)),3])]
stepsPerDay_new <- tapply(activity_new$steps,activity_new$date, fun = sum)
qplot(stepsPerDay_new,xlab='Total steps per day (Imputed)', ylab='Frequency using binwith 500', binwidth=500)
stepsPerDay_new <- tapply(activity_new$steps,activity_new$date, fun=sum)
stepsPerDay_new
activity_new$steps <- impute(activityData$steps, fun=mean)
library(ggplot2)
library(scales)
library(Hmisc)
install.packages(Hmisc)
install.packages("Hmisc")
library(ggplot2)
library(scales)
library(Hmisc)
activity_new$steps <- impute(activityData$steps, fun=mean)
View(activity_new)
View(activity_new)
View(activityData)
View(activityData)
activity_newp[which(is.na(activity_new$steps)),1]
activity_new[which(is.na(activity_new$steps)),1]
1 <- activity_new[which(is.na(activity_new$steps)),1]
x <- activity_new[which(is.na(activity_new$steps)),1]
activity_new <- activityData
activity_new[which(is.na(activity_new$steps)),1] <- averageStepsPerInterval[as.character(activity_new[which(is.na(activity_new$steps)),3])]
View(averageStepsPerInterval)
View(averageStepsPerInterval)
activity_new <- activityData
activity_new[which(is.na(activity_new$steps)),1] <- averageStepsPerInterval[as.character(activity_new[which(is.na(activity_new$steps)),2])]
View(activity_new)
View(activity_new)
activity_new <- activityData
activity_new[activity_new[which(is.na(activity_new$steps)),3],1] <- averageStepsPerInterval[as.character(activity_new[which(is.na(activity_new$steps)),2])]
activity_new <- activityData
activity_new[activity_new[which(is.na(activity_new$steps)),3],1] <- averageStepsPerInterval[as.character(activity_new[which(is.na(activity_new$steps)),1])]
activity_new <- activityData
